name: Require Jira Ticket (Bearer)

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

env:
  # Edit ticket prefixes here
  TICKET_REGEX: '(PRD|OPS|JJ|FMS|BUG|TASK)-[0-9]+'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate ticket exists in Jira
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}   # e.g., https://jira.company.com
          #JIRA_PAT: ${{ secrets.JIRA_API_TOKEN }}    
          JIRA_PAT: ${{ vars.JIRA_BASE_URL }} # Bearer token
        run: |
          set -euo pipefail

          if [[ -z "${JIRA_BASE_URL:-}" ]]; then echo "::error::JIRA_BASE_URL not set"; exit 1; fi
          if [[ -z "${JIRA_PAT:-}" ]]; then echo "::error::JIRA_PAT not set"; exit 1; fi

          PR_TITLE="$(jq -r '.pull_request.title' < "$GITHUB_EVENT_PATH")"
          PR_BRANCH="$(jq -r '.pull_request.head.ref' < "$GITHUB_EVENT_PATH")"
          echo "PR title : $PR_TITLE"
          echo "PR branch: $PR_BRANCH"

          # extract ticket
          find_ticket() { echo "$1" | grep -E -o -i "$TICKET_REGEX" | head -n1 || true; }
          ISSUE_KEY="$(find_ticket "$PR_TITLE")"
          if [[ -z "$ISSUE_KEY" ]]; then ISSUE_KEY="$(find_ticket "$PR_BRANCH")"; fi

          if [[ -z "$ISSUE_KEY" ]]; then
            echo "::error::No ticket key found in PR title or branch (regex: $TICKET_REGEX)"
            exit 1
          fi

          ISSUE_KEY="$(echo "$ISSUE_KEY" | tr '[:lower:]' '[:upper:]')"
          echo "Found ticket key: $ISSUE_KEY"

          ISSUE_URL="${JIRA_BASE_URL%/}/rest/api/3/issue/${ISSUE_KEY}?fields=key,summary,status,assignee"

          # Print URLs for debugging
          echo "Using JIRA_BASE_URL: $JIRA_BASE_URL"
          echo "Constructed ISSUE_URL: $ISSUE_URL"

          # Call Jira API
          HTTP_CODE="$(curl -sS -o issue.json -w '%{http_code}' \
            -H "Authorization: Bearer ${JIRA_PAT}" \
            -H "Accept: application/json" \
            "$ISSUE_URL")"

          if [[ "$HTTP_CODE" != "200" ]]; then
            echo "::error::Jira lookup failed (HTTP $HTTP_CODE)"
            head -c 400 issue.json || true
            exit 1
          fi

          SUMMARY="$(jq -r '.fields.summary // "(no summary)"' issue.json)"
          STATUS="$(jq -r '.fields.status.name // "(no status)"' issue.json)"
          ASSIGNEE="$(jq -r '.fields.assignee.displayName // "Unassigned"' issue.json)"

          echo "::notice::Jira ticket: ${ISSUE_KEY}"
          echo "::notice::Summary    : ${SUMMARY}"
          echo "::notice::Status     : ${STATUS}"
          echo "::notice::Assignee   : ${ASSIGNEE}"

          echo "âœ… Passed: Jira issue exists and details retrieved."
