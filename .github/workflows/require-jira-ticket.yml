- name: Check title/branch for ticket; verify in Jira; print status & assignee
  env:
    JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
    JIRA_USER: ${{ secrets.JIRA_USER }}
    JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
    TICKET_REGEX: ${{ env.TICKET_REGEX }}
  run: |
    set -euo pipefail

    # Guard rails: make sure secrets are present
    if [[ -z "${JIRA_BASE_URL:-}" ]]; then echo "::error::JIRA_BASE_URL is not set"; exit 1; fi
    if [[ -z "${JIRA_USER:-}" ]]; then echo "::error::JIRA_USER is not set"; exit 1; fi
    if [[ -z "${JIRA_API_TOKEN:-}" ]]; then echo "::error::JIRA_API_TOKEN is not set"; exit 1; fi
    if [[ ! "$JIRA_BASE_URL" =~ ^https:// ]]; then echo "::warning::JIRA_BASE_URL should start with https://"; fi

    PR_TITLE="$(jq -r '.pull_request.title' < "$GITHUB_EVENT_PATH")"
    PR_BRANCH="$(jq -r '.pull_request.head.ref' < "$GITHUB_EVENT_PATH")"

    echo "PR title : $PR_TITLE"
    echo "PR branch: $PR_BRANCH"

    find_ticket() { echo "$1" | grep -E -o -i "$TICKET_REGEX" | head -n1 || true; }

    ISSUE_KEY="$(find_ticket "$PR_TITLE")"
    if [[ -z "$ISSUE_KEY" ]]; then ISSUE_KEY="$(find_ticket "$PR_BRANCH")"; fi

    if [[ -z "$ISSUE_KEY" ]]; then
      echo "::error::No ticket key found in PR title or branch. Expected like PRD-1234 (regex: $TICKET_REGEX, case-insensitive)."
      exit 1
    fi

    ISSUE_KEY="$(echo "$ISSUE_KEY" | tr '[:lower:]' '[:upper:]')"
    echo "Found ticket key: $ISSUE_KEY"

    ISSUE_URL="${JIRA_BASE_URL}/rest/api/3/issue/${ISSUE_KEY}?fields=key,summary,status,assignee"

    # Use Basic auth with username:token
    HTTP_CODE="$(curl -sS --fail -w '%{http_code}' -o issue.json \
      -u "${JIRA_USER}:${JIRA_API_TOKEN}" \
      -H 'Accept: application/json' \
      "$ISSUE_URL" || true)"

    if [[ "$HTTP_CODE" != "200" ]]; then
      if [[ "$HTTP_CODE" == "404" ]]; then
        echo "::error::Jira issue ${ISSUE_KEY} not found (HTTP 404)."
      else
        echo "::error::Jira API call failed (HTTP ${HTTP_CODE:-unknown})."
        cat issue.json || true
      fi
      exit 1
    fi

    SUMMARY="$(jq -r '.fields.summary // "(no summary)"' issue.json)"
    STATUS="$(jq -r '.fields.status.name // "(no status)"' issue.json)"
    ASSIGNEE_NAME="$(jq -r '.fields.assignee.displayName // "Unassigned"' issue.json)"
    ASSIGNEE_EMAIL="$(jq -r '.fields.assignee.emailAddress // ""' issue.json)"

    echo "::notice::Jira ticket: ${ISSUE_KEY}"
    echo "::notice::Summary    : ${SUMMARY}"
    echo "::notice::Status     : ${STATUS}"
    if [[ -n "$ASSIGNEE_EMAIL" ]]; then
      echo "::notice::Assignee   : ${ASSIGNEE_NAME} <${ASSIGNEE_EMAIL}>"
    else
      echo "::notice::Assignee   : ${ASSIGNEE_NAME}"
    fi

    echo "âœ… Check passed: title/branch contains ${ISSUE_KEY} and Jira confirms it exists."
